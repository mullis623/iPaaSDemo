{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_NotifyCityOpsMgrLA_name": {
            "defaultValue": "NotifyCityOpsMgrLA",
            "type": "String"
        },
        "storageAccounts_blobuploadedimages_externalid": {
            "defaultValue": "/subscriptions/076f98ce/resourceGroups/iPaaSDemo-PROD/providers/Microsoft.Storage/storageAccounts/blobuploadedimages",
            "type": "String"
        },
        "connections_azureeventgrid_externalid": {
            "defaultValue": "/subscriptions/076f98ce/resourceGroups/iPaaSDemo-PROD/providers/Microsoft.Web/connections/azureeventgrid",
            "type": "String"
        },
        "connections_documentdb_externalid": {
            "defaultValue": "/subscriptions/076f98ce/resourceGroups/iPaaSDemo-PROD/providers/Microsoft.Web/connections/documentdb",
            "type": "String"
        },
        "connections_office365_1_externalid": {
            "defaultValue": "/subscriptions/076f98ce/resourceGroups/iPaaSDemo-PROD/providers/Microsoft.Web/connections/office365-1",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_NotifyCityOpsMgrLA_name')]",
            "location": "eastus",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_resource_event_occurs": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "webhook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "filter": {
                                            "includedEventTypes": [
                                                "Microsoft.Storage.BlobCreated"
                                            ]
                                        },
                                        "topic": "[parameters('storageAccounts_blobuploadedimages_externalid')]"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureeventgrid']['connectionId']"
                                    }
                                },
                                "path": "/subscriptions/@{encodeURIComponent('076f98ce')}/providers/@{encodeURIComponent('Microsoft.Storage.StorageAccounts')}/resource/eventSubscriptions",
                                "queries": {
                                    "x-ms-api-version": "2017-09-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Compose_JSON_object_from_Event_Grid_subscription": {
                            "runAfter": {},
                            "type": "Compose",
                            "inputs": "@triggerBody()?['data']"
                        },
                        "Create_or_update_document": {
                            "runAfter": {
                                "Initialize_Partition_Key_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "api": "@{body('Parse_JSON')?['api']}",
                                    "blobType": "@{body('Parse_JSON')?['blobType']}",
                                    "clientRequestId": "@{body('Parse_JSON')?['clientRequestId']}",
                                    "contentLength": "@body('Parse_JSON')?['contentLength']",
                                    "contentType": "@{body('Parse_JSON')?['contentType']}",
                                    "eTag": "@{body('Parse_JSON')?['eTag']}",
                                    "id": "@{guid()}",
                                    "itemId": "@{variables('itemId')}",
                                    "requestId": "@{body('Parse_JSON')?['requestId']}",
                                    "sequencer": "@{body('Parse_JSON')?['sequencer']}",
                                    "url": "@{body('Parse_JSON')?['url']}"
                                },
                                "headers": {
                                    "x-ms-documentdb-raw-partitionkey": "\"@{variables('itemId')}\""
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/dbs/@{encodeURIComponent('ImageDataDB')}/colls/@{encodeURIComponent('GeoLocation')}/docs"
                            }
                        },
                        "Initialize_Partition_Key_variable": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "itemId",
                                        "type": "string",
                                        "value": "@{guid()}"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "Compose_JSON_object_from_Event_Grid_subscription": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@outputs('Compose_JSON_object_from_Event_Grid_subscription')",
                                "schema": {
                                    "properties": {
                                        "api": {
                                            "type": "string"
                                        },
                                        "blobType": {
                                            "type": "string"
                                        },
                                        "clientRequestId": {
                                            "type": "string"
                                        },
                                        "contentLength": {
                                            "type": "integer"
                                        },
                                        "contentType": {
                                            "type": "string"
                                        },
                                        "eTag": {
                                            "type": "string"
                                        },
                                        "requestId": {
                                            "type": "string"
                                        },
                                        "sequencer": {
                                            "type": "string"
                                        },
                                        "url": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Send_an_email_to_City_Ops_Managers": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Body": "<p><span style=\"color: rgb(44,130,201)\">Event Time:</span> @{triggerBody()?['eventTime']}<br>\n<span style=\"color: rgb(44,130,201)\">Data object:</span> @{triggerBody()?['data']}<br>\n<span style=\"color: rgb(44,130,201)\">Storage account modified upon image upload: </span>@{triggerBody()?['topic']}</p>",
                                    "Subject": "Citizen Image Uploaded to Blob Storage",
                                    "To": "daghazal@microsoft.com; rujabbar@microsoft.com"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureeventgrid": {
                                "connectionId": "[parameters('connections_azureeventgrid_externalid')]",
                                "connectionName": "azureeventgrid",
                                "id": "/subscriptions/076f98ce/providers/Microsoft.Web/locations/eastus/managedApis/azureeventgrid"
                            },
                            "documentdb": {
                                "connectionId": "[parameters('connections_documentdb_externalid')]",
                                "connectionName": "documentdb",
                                "id": "/subscriptions/076f98ce/providers/Microsoft.Web/locations/eastus/managedApis/documentdb"
                            },
                            "office365_1": {
                                "connectionId": "[parameters('connections_office365_1_externalid')]",
                                "connectionName": "office365-1",
                                "id": "/subscriptions/076f98ce/providers/Microsoft.Web/locations/eastus/managedApis/office365"
                            }
                        }
                    }
                }
            }
        }
    ]
}