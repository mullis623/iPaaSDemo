name: Build Function App

on:
  workflow_dispatch:

env:
  ARTIFACT_PATH: iPaas-Demo-Functions/bin/Release/netcoreapp3.1
  ARTIFACT_NAME: drop.zip
  BUILD_PATH: iPaas-Demo-Functions

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: |
        echo $GITHUB_WORKSPACE
        echo $BUILD_PATH
        echo $PWD
        dotnet restore
      working-directory: $GITHUB_WORKSPACE/$BUILD_PATH
    - name: Build
      run: dotnet build --no-restore --configuration Release
      working-directory: $GITHUB_WORKSPACE/$BUILD_PATH
    - name: Package
      run: cd $ARCHIVE_PATH && zip $ARCHIVE_NAME *
    - name: Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: true
        prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: $GITHUB_WORKSPACE/$ARCHIVE_PATH
        asset_name: $ARCHIVE_NAME
        asset_content_type: application/zip
